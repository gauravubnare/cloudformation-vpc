Parameters:
  MyCidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.0.0/16
      Description: My CIDR Description
  AvailibityZones:
      Type: Number
      MinValue: 1
      MaxValue: 3
      Default: 3
      Description: Availibility Zone Count
  PublicSubnet1Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.1.0/24
      Description: My Public Subnet CIDR Description
#  AvailabilityZone1:
#      Description: The AvailabilityZone to use for the first subnet
#      Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet2Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.2.0/24
      Description: My Public Subnet CIDR Description
#  AvailabilityZone2:
#      Description: The AvailabilityZone to use for the second subnet
#      Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet3Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.3.0/24
      Description: My Public Subnet CIDR Description
#  AvailabilityZone3:
#      Description: The AvailabilityZone to use for the third subnet
#      Type: AWS::EC2::AvailabilityZone::Name
  PrivateSubnet1Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.4.0/24
      Description: My Public Subnet CIDR Description
  PrivateSubnet2Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.5.0/24
      Description: My Public Subnet CIDR Description
  PrivateSubnet3Cidr:
      Type: String
      AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
      Default: 10.0.6.0/24
      Description: My Public Subnet CIDR Description

Resources:
  MyVPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 
       Ref: MyCidr
      Tags:
      - Key: Name
        Value: 
          Ref: AWS::StackName
  MyPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
#        Ref:  AvailabilityZone1
      CidrBlock: 
        Ref: PublicSubnet1Cidr
      Tags: 
        - Key: Name
          Value: MyPublicSubnet1
      VpcId: 
        Ref: MyVPC
  MyPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region' 
#        Ref: AvailabilityZone2 
      CidrBlock: 
        Ref: PublicSubnet2Cidr
      VpcId: 
        Ref: MyVPC
      Tags: 
        - Key: Name
          Value: MyPublicSubnet2
  MyPublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: MyVPC
      AvailabilityZone: !Select 
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
#        Ref: AvailabilityZone3 
      CidrBlock: 
        Ref: PublicSubnet3Cidr
      Tags: 
        - Key: Name
          Value: MyPublicSubnet3 
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
      - Key: Name
        Value: MyInternetGateway
  MyInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: 
        Ref:  MyInternetGateway
      VpcId: 
        Ref: MyVPC
  MyPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: MyPublicRouteTable
  MyPublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: 
        Ref: MyPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref: MyInternetGateway
    DependsOn:
      - MyInternetGateway
      - MyInternetGatewayAttachment
  MyPublicSubnet1Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPublicRouteTable
      SubnetId: 
        Ref: MyPublicSubnet1
  MyPublicSubnet2Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPublicRouteTable
      SubnetId: 
        Ref: MyPublicSubnet2
  MyPublicSubnet3Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPublicRouteTable
      SubnetId: 
        Ref: MyPublicSubnet3
  MyPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: MyVPC
      AvailabilityZone: !Select 
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
#        Ref:  AvailabilityZone1
      CidrBlock: 
        Ref: PrivateSubnet1Cidr
      Tags: 
        - Key: Name
          Value: MyPrivateSubnet1
  MyPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: MyVPC
      AvailabilityZone: !Select 
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
#        Ref:  AvailabilityZone1
      CidrBlock: 
        Ref: PrivateSubnet2Cidr
      Tags: 
        - Key: Name
          Value: MyPrivateSubnet2
  MyPrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: MyVPC
      AvailabilityZone: !Select 
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
#        Ref:  AvailabilityZone1
      CidrBlock: 
        Ref: PrivateSubnet3Cidr
      Tags: 
        - Key: Name
          Value: MyPrivateSubnet3
  MyPrivateRoute1Table:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: MyPrivateRoute1Table
  MyPrivateRoute2Table:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: MyPrivateRoute2Table
  MyPrivateRoute3Table:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: MyPrivateRoute3Table
  MyPrivateSubnet1Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute1Table
      SubnetId: 
        Ref: MyPrivateSubnet1
  MyPrivateSubnet2Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute2Table
      SubnetId: 
        Ref: MyPrivateSubnet2
  MyPrivateSubnet3Assocication:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute3Table
      SubnetId: 
        Ref: MyPrivateSubnet3 
  MyEIP1:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
  MyEIP2:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc          
  MyEIP3:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
  MyNATGateway1:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt MyEIP1.AllocationId
      SubnetId: 
        Ref:  MyPublicSubnet1
      Tags:
        - Key: Name
          Value: MyNATGateway1
  MyNATGateway2:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt MyEIP2.AllocationId
      SubnetId: 
        Ref:  MyPublicSubnet2
      Tags:
        - Key: Name
          Value: MyNATGateway2
  MyNATGateway3:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt MyEIP3.AllocationId
      SubnetId: 
        Ref:  MyPublicSubnet3
      Tags:
        - Key: Name
          Value: MyNATGateway3
  MyPrivateRoute1:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute1Table
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: 
        Ref: MyNATGateway1
#    DependsOn:
#      - MyNATGateway1
  MyPrivateRoute2:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute2Table
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: 
        Ref: MyNATGateway2
#    DependsOn:
#      - MyNATGateway2
  MyPrivateRoute3:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: 
        Ref: MyPrivateRoute3Table
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: 
        Ref: MyNATGateway3
#    DependsOn:
#      - MyNATGateway3
      

  
  

